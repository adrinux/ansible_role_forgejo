---
- name: Identify forgejo users
  ansible.builtin.command:
    cmd: "{{ forgejo_full_executable_path }} -c {{ forgejo_configuration_path }}/forgejo.ini admin user list"
  become: true
  become_user: "{{ forgejo_user }}"
  register: _forgejousers
  changed_when: false

- name: Use forgejo cli to create user
  become: true
  become_user: "{{ forgejo_user }}"
  ansible.builtin.command:
    cmd: >
      {{ forgejo_full_executable_path }} -c {{ forgejo_configuration_path }}/forgejo.ini
        admin user create --username "{{ user.name }}"
        --password "{{ user.password }}" --email "{{ user.email }}"
        --must-change-password={{ user.must_change_password }} --admin={{ user.admin }}
  register: _forgejoresult
  failed_when:
    - '"successfully created" not in _forgejoresult.stdout'
  changed_when:
    - '"successfully created!" in _forgejoresult.stdout'
  when: "_forgejousers is defined and user.name not in _forgejousers.stdout and user.state | default('present') == 'present'"
  loop: "{{ forgejo_users }}"
  loop_control:
    label: "user={{ user.name }}"
    loop_var: user

- name: Use forgejo cli to delete user
  become: true
  become_user: "{{ forgejo_user }}"
  ansible.builtin.command:
    cmd: >
      {{ forgejo_full_executable_path }} -c {{ forgejo_configuration_path }}/forgejo.ini
      admin user delete --username "{{ user.name }}"
  register: _forgejodelresult
  failed_when:
    - '"error" in _forgejodelresult.stdout'
  changed_when: "_forgejousers is defined and user.name in _forgejousers.stdout"
  when: "_forgejousers is defined and user.name in _forgejousers.stdout and user.state | default('present') == 'absent'"
  loop: "{{ forgejo_users }}"
  loop_control:
    label: "user={{ user.name }}"
    loop_var: user
